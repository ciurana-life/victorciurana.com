name: CI

on: [push]

jobs:

  build:

    name: Build test and push to GCP registry
    runs-on: ubuntu-latest

    steps:

      # Set up checkout
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up SOPS
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1
        id: install

      # Set up SSH
      - name: Install SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOSTS }} >> ~/.ssh/known_hosts

      # Set up gcloud actions and log in
      - name: Login GCP credentials
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 298.0.0
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      # Build for tests
      - name: Pull GCR dev
        run: LD_LIBRARY_PATH=/usr/lib docker-compose pull web || true
      - name: Build dev docker for test on it
        run: docker buil eu.gcr.io/victor-ciurana-com/victorciuranacom_web_dev

      # Run liters and tests
      - name: Lint checks with black and flake8
        run: docker-compose run web pytest --black app --flake8
      - name: Pytest
        run: docker-compose run web pytest

      # If tests pass push dev
      - name: Push dev image
        run: docker push eu.gcr.io/victor-ciurana-com/victorciuranacom_web_dev

      # Cache?
      - name: Pull prod Docker image
        run: docker pull eu.gcr.io/victor-ciurana-com/victorciuranacom_web

      # If test pass build prod
      - name: Build prod Docker image
        run: sops exec-env .envs/.prod/.prod.env 'docker build eu.gcr.io/victor-ciurana-com/victorciuranacom_web_dev'

      # Push prod
      - name: Push prod to registry
        run: LD_LIBRARY_PATH=/usr/lib docker-compose -f docker-compose.prod.yml push web

      # Prod changes with SSH
      - name: Pull prod on VM
        run: LD_LIBRARY_PATH=/usr/lib docker-compose -H "ssh://admin@${{ secrets.SSH_HOSTS }}" -f docker-compose.prod.yml pull

      # Up --recreate (GUARRADA)
      - name: Up prod on VM
        run: |
          sops exec-env .envs/.prod/.prod.env 'ssh admin@${{ secrets.SSH_HOSTS }} "/home/admin/.local/bin/docker-compose -f victorciurana.com/docker-compose.prod.yml up --force-recreate --remove-orphans -d"'

      - name: Remove unused prod VM
        run: docker -H "ssh://admin@${{ secrets.SSH_HOSTS }}" image prune -af
